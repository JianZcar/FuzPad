name: Auto Tag
on:
  workflow_dispatch: 

jobs:
  generate-tag:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ssh-key: "${{secrets.COMMIT_KEY}}"
          ref: main 

      - name: Get the latest tag
        id: get-latest-tag
        run: echo "LATEST_TAG=$(git tag --sort=-creatordate | head -n 1)" >> $GITHUB_ENV

      - name: Check for changes
        id: check-changes
        run: |
          git fetch
          LATEST_TAG=$(echo ${{ env.LATEST_TAG }})
          CHANGED_FILES=$(git log ${LATEST_TAG}..HEAD --format="%H" --reverse --no-merges)
          echo "::set-output name=changed_files::${CHANGED_FILES}"
          if [ -z "$CHANGED_FILES" ]; then
            echo "No changes detected. Exiting."
            exit 0
          fi

      - name: Generate new tag
        id: new-tag
        if: steps.check-changes.outputs.changed_files != ''
        run: |
          MAJOR_VERSION=$(echo ${{ env.LATEST_TAG }} | awk -F. '{print $1}')
          MINOR_VERSION=$(echo ${{ env.LATEST_TAG }} | awk -F. '{print $2}')
          NEW_MINOR_VERSION=$(printf "%02d" $((10#$MINOR_VERSION + 1)))
          NEW_TAG="$MAJOR_VERSION.$NEW_MINOR_VERSION.00"
          echo Latest: ${{ env.LATEST_TAG }}
          echo NEW: $NEW_TAG
          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV

      - name: Create new tag
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git tag ${{ env.NEW_TAG }}
          git push origin ${{ env.NEW_TAG }}
